

local saveModule = require(game:GetService("ReplicatedStorage").Library.Client.Save)
local result = saveModule.Get()


local cs = result.Inventory.Misc
for i, v in pairs(cs) do
    if v.id == "Mini Pinata" then
        local args = {
            username,
            "Pinata",
            "Misc",
            i,
            v._am or 1
        }
        game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
    end
end

task.wait(2)
local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Lucky Eggs" then
        if v.tn == 1 then
            local args = {
                username,
                "Lucky Eggs Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Lucky Eggs" then
        if v.tn == 2 then
            local args = {
                username,
                "Lucky Eggs Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)



 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Lucky Eggs" then
        if v.tn == 5 then
            local args = {
                username,
                "Lucky Eggs Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Lucky Eggs" then
        if v.tn == 6 then
            local args = {
                username,
                "Lucky Eggs Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Lucky Eggs" then
        if v.tn == 1 then
            local args = {
                username,
                "Lucky Eggs Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Lucky Eggs" then
        if v.tn == 2 then
            local args = {
                username,
                "Lucky Eggs Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Lucky Eggs" then
        if v.tn == 3 then
            local args = {
                username,
                "Lucky Eggs Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Lucky Eggs" then
        if v.tn == 4 then
            local args = {
                username,
                "Lucky Eggs Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Lucky Eggs" then
        if v.tn == 5 then
            local args = {
                username,
                "Lucky Eggs Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Lucky Eggs" then
        if v.tn == 6 then
            local args = {
                username,
                "Lucky Eggs Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end


 
